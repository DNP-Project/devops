# /opt/infra/docker-compose.yml
version: "3.9"

x-common: &common
  restart: unless-stopped
  # убрали старую сеть infra, подключение будет задаваться внизу
  networks: []

services:
  traefik:
    <<: *common
    image: traefik:v3.0
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=infra_prod
      - --providers.docker.network=infra_stage
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/acme.json
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./acme.json:/acme.json
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - prod_net
      - stage_net

  registry:
    <<: *common
    image: registry:2
    environment:
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /var/lib/registry
    volumes:
      - registry_data:/var/lib/registry
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.registry.rule=Host(`registry.${DOMAIN}`)"
      - "traefik.http.routers.registry.entrypoints=websecure"
      - "traefik.http.routers.registry.tls.certresolver=letsencrypt"
      - "traefik.http.routers.registry.middlewares=registry-auth"
      - "traefik.http.middlewares.registry-auth.basicauth.users=${REGISTRY_AUTH}"
    networks:
      - prod_net
      - stage_net

  loki:
    <<: *common
    image: grafana/loki:3.4.3
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml:ro
      - loki_data:/loki
    networks:
      - prod_net
      - stage_net

  promtail:
    <<: *common
    image: grafana/promtail:3.4.3
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./promtail-config.yaml:/etc/promtail/promtail.yaml:ro
    networks:
      - prod_net
      - stage_net

  prometheus:
    <<: *common
    image: prom/prometheus:v2.52.0
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prom_data:/prometheus
    networks:
      - prod_net
      - stage_net

  cadvisor:
    <<: *common
    image: gcr.io/cadvisor/cadvisor:v0.50.0
    networks:
      - prod_net
      - stage_net

  node_exporter:
    <<: *common
    image: quay.io/prometheus/node-exporter:v1.9.0
    networks:
      - prod_net
      - stage_net

  grafana:
    <<: *common
    image: grafana/grafana-oss:11.0.0
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PWD}
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - loki
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.${DOMAIN}`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=letsencrypt"
    networks:
      - prod_net
      - stage_net

networks:
  prod_net:
    external: true
    name: infra_prod
  stage_net:
    external: true
    name: infra_stage

volumes:
  traefik_acme:
  registry_data:
  loki_data:
  prom_data:
  grafana_data:
